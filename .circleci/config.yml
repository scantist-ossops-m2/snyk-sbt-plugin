version: 2.1

orbs:
  win: circleci/windows@2.4.0

defaults: &defaults
  parameters:
    jdk_version:
      type: string
      default: ''
    node_version:
      type: string
      default: ''
    sbt_version:
      type: string
      default: ''

windows_defaults: &windows_defaults
  environment:
    npm_config_loglevel: silent
  executor:
    name: win/default

test_matrix_win: &test_matrix_win
  matrix:
    parameters:
      node_version: ['16']
      jdk_version: ['11']
      sbt_version: ['1.5.5']

test_matrix_unix: &test_matrix_unix
  matrix:
    parameters:
      node_version: ['16']
      jdk_version: ['11.0.9.fx-zulu']
      sbt_version: ['1.5.5']

commands:
  install_node_npm:
    parameters:
      node_version:
        type: string
        default: ''
    steps:
      - run: nvm install << parameters.node_version >>
      - run: nvm use << parameters.node_version >>
  show_node_version:
    description: Show node version and npm version
    steps:
      - run: node --version
      - run: npm --version
  install_sdkman:
    steps:
      - run:
          name: Installing SDKMAN
          command: |
            curl -s "https://get.sdkman.io?rcupdate=false" | bash
            echo -e '\nsource "/home/circleci/.sdkman/bin/sdkman-init.sh"' >> $BASH_ENV
            source $BASH_ENV
  install_sbt_windows:
    parameters:
      sbt_version:
        type: string
        default: ''
    steps:
      - run: choco install sbt --version=<< parameters.sbt_version >>
  install_sbt_unix:
    parameters:
      sbt_version:
        type: string
        default: ''
    steps:
      - run:
          name: Install correct version of sbt
          command: sdk install sbt << parameters.sbt_version >>
      - run:
          name: Use correct version of sbt
          command: sdk use sbt << parameters.sbt_version >>
  install_jdk_unix:
    parameters:
      jdk_version:
        type: string
        default: ''
    steps:
      - run:
          name: Install correct version of JDK
          command: sdk install java << parameters.jdk_version >>
      - run:
          name: Use correct version of JDK
          command: sdk use java << parameters.jdk_version >>
  install_jdk_windows:
    parameters:
      jdk_version:
        type: string
        default: ''
    steps:
      - run:
          name: Installing JDK
          command: choco install zulu<< parameters.jdk_version >> --allow-downgrade

jobs:
  lint:
    <<: *defaults
    docker:
      - image: circleci/node:<< parameters.node_version >>
    steps:
      - checkout
      - run: npm install
      - show_node_version
      - run:
          name: Run lint
          command: npm run lint

  test-windows:
    <<: *defaults
    <<: *windows_defaults
    environment:
      JDK: << parameters.jdk_version >>
      SBT: << parameters.sbt_version >>
    steps:
      - run: git config --global core.autocrlf false
      - checkout
      - install_node_npm:
          node_version: << parameters.node_version >>
      - install_jdk_windows:
          jdk_version: << parameters.jdk_version >>
      - install_sbt_windows:
          sbt_version: << parameters.sbt_version >>
      - run: npm install
      - show_node_version
      - run: npm run test

  # test-unix:
  #   <<: *defaults
  #   docker:
  #     - image: circleci/node:<< parameters.node_version >>
  #   environment:
  #     JDK: << parameters.jdk_version >>
  #     SBT: << parameters.sbt_version >>
  #   steps:
  #     - checkout
  #     - install_sdkman
  #     - install_jdk_unix:
  #         jdk_version: << parameters.jdk_version >>
  #     - install_sbt_unix:
  #         sbt_version: << parameters.sbt_version >>
  #     - run: npm install
  #     - show_node_version
  #     - run: npm run test

  # release:
  #   <<: *defaults
  #   docker:
  #     - image: circleci/node:<< parameters.node_version >>
  #   steps:
  #     - checkout
  #     - run: npm install
  #     - run: sudo npm i -g semantic-release @semantic-release/exec pkg
  #     - run:
  #         name: Publish to GitHub
  #         command: semantic-release

workflows:
  version: 2
  test_and_release:
    jobs:
      # - lint:
      #     name: Lint
      #     context: nodejs-install
      #     node_version: '16'
      #     filters:
      #       branches:
      #         ignore:
      #           - master

    #   - test-unix:
    #       name: Unix Tests for Node << matrix.node_version >>, JDK << matrix.jdk_version >>, SBT << matrix.sbt_version >>
    #       context: nodejs-install
    #       <<: *test_matrix_unix

    - test-windows:
        name: Windows Tests for Node << matrix.node_version >>, JDK << matrix.jdk_version >>, SBT << matrix.sbt_version >>
        context: nodejs-install
        <<: *test_matrix_win

    # - release:
    #     name: Release
    #     context: nodejs-app-release
    #     node_version: '16'
    #     filters:
    #       branches:
    #         only:
    #           - master
